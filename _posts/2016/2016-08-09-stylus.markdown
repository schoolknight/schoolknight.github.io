---
layout: "post"
title: "在Express中使用Stylus（内部编译）"
date: "2016-08-09 00:27"
---

**[Stylus](http://stylus-lang.com/)**是CSS预处理语言的一种，我选择它的主要原因是它和nodejs联系比较紧密，可以直接在工程里面编译，至于它和LESS等其他语言的比较，网上的相关文章很多。

这篇文章主要记录一下如何在nodejs中，与Express一起使用Stylus，另外还有我遇到的神秘的Bug。

## 安装Stylus

直接npm安装

```
npm install -g stylus nib
```

nib貌似是一个拓展包，其中包含些函数。

## 配置Express
也比较简单，我的配置如下（app.js）

{% highlight javascript %}
var stylus = require('stylus');
var nib = require('nib');
function compile(str,path){

	return stylus(str)
		.set('filename', path)
		//.set('compress', true)
		.set('warn',true)
		.use(nib());
}


app.use(stylus.middleware({
	src:path.join(__dirname,'resources/css'),
	dest: path.join(__dirname,'public/css'),
	debug: true,
	force:true,
	compile: compile
}));
{% endhighlight %}

最开始我怎么都没有办法编译，也查不出为什么，直到我把Stylus的代码移动到下面代码之前

{% highlight javascript %}

// avoid 304
app.disable('etag');

// route

app.use('/clientserver', clientRouter);

// 404
app.use(function(req, res, next) {
	var err = new Error(req.originalUrl + ' Not Found');
	err.status = 404;
	next(err);
});

// development error handler   print stacktraces

if(app.get('env') == 'development') {
	app.use(function(err, req, res, next) {
		console.log(err.message);
 		res.status(200).send({
 			message: err.message,
 			error: err
 		});
 	});
}

if(app.get('env') == 'production') {
	app.use(function(err, req, res, netxt) {
		console.log(err.message);

		log.logger.error("Error:" + req.ip + ":" + err.message);

		res.status(err.status || 500).send("error");

	});
}
{% endhighlight %}

迷一样的Bug，可能是在Express中下面某句的代码有冲突之类的（有可能是Router）

还有待继续研究。
